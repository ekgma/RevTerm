# ----------------------------------------------------------------------
# description
# find right configuration,
# use specific components for interleaved algorithm to ensure reproduceability?
# ----------------------------------------------------------------------

analysis.useInterleavedAnalyses = true
interleavedAlgorithm.writeIntermediateOutputFiles = false
interleavedAlgorithm.intermediateStatistics = NONE
interleavedAlgorithm.propertyChecked = false
log.consoleLevel = SEVERE

testcase.targets.optimization.strategy = TESTCOMP

# enable writing of test cases
testcase.xml=test-suite/testcase%d.xml

testcase.reportCoveredErrorCallAsError = false

# The used analyses.
interleavedAlgorithm.configFiles = components/testing/testcomp20-generation-value.properties::continue_20, components/testing/testcomp19-generation-predicate.properties::continue_80

# If option is set the time limits per round are adapted according to seen progress
interleavedAlgorithm.adaptTimeLimits = true

# change these parameters to be better at recursive programs
cpa.callstack.depth=0
# setting this option is unsound, but we may get a valid test case by fortune if we encounter too many recursive calls
cpa.callstack.skipVoidRecursion = false

# explicitly set time limit to ensure that limit of competition is used
limits.time.cpu = 900s