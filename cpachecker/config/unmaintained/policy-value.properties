#include ../valueAnalysis.properties

CompositeCPA.cpas=cpa.location.LocationCPA, \
                  cpa.callstack.CallstackCPA, \
                  cpa.functionpointer.FunctionPointerCPA, \
                  cpa.loopbound.LoopBoundCPA, \
                  cpa.value.ValueAnalysisCPA, \
                  cpa.policyiteration.PolicyCPA,\
                  cpa.congruence.CongruenceCPA

cpa.reportFalseAsUnknown=true

[cpa.loopbound]
loopIterationsBeforeAbstraction=1
trackStack = true

[cfa]
findLiveVariables = true

[solver]
solver = Z3
z3.requireProofs = false

[precision.template]
maxExpressionSize=1

[analysis.traversal]
order = dfs
useCallstack = true
useReversePostorder = true
useLoopstack = true

[cpa.predicate]
# Various crashes and wrong proofs with bitprecise semantics, so use linear approximation
encodeBitvectorAs = INTEGER
encodeFloatAs = RATIONAL
